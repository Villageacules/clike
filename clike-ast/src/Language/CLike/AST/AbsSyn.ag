-------------------------------------------------------------------------------------------
-- Position embedded in AST
-------------------------------------------------------------------------------------------

DATA AllBaseNT
  | *                   pos             : Pos

-------------------------------------------------------------------------------------------
-- Top level
-------------------------------------------------------------------------------------------

DATA AGItf
  | AGItf               module          : Module

DATA Module
  | Mod                 decls      		: DeclL

DATA AGItfPrePr
  | AGItf               module          : ModulePrePr

DATA ModulePrePr
  | Mod                 preprs      	: PrePrL

-------------------------------------------------------------------------------------------
-- Declarations (table, var, type)
-------------------------------------------------------------------------------------------

DATA Decl
  | None                  

TYPE DeclL	         	= [Decl]

SET AllDecl             = Decl DeclL

-------------------------------------------------------------------------------------------
-- Preprocessing
-------------------------------------------------------------------------------------------

DATA PrePr
  -- definitions
  | Define				nm				: Name
  						params			: {[Name]}
  						paramsHasDots	: Bool
  						body			: {[Token]}
  | Undef				nm				: Name
  
  -- choice
  | IfThenElse			expr			: PrePrExpr
  						toksThen		: PrePrL
  						preprElse		: PrePrL

  -- just tokens
  | Toks				toks			: {[Token]}
  
  -- misc
  | Include				incl			: LexString
  | Line				toks			: {[Token]}
  | Error				toks			: {[Token]}
  | Pragma				toks			: {[Token]}

DATA PrePrExpr
  | Expr				expr			: Expr
  | IsDefined			nm				: Name
  | IsNotDefined		nm				: Name

TYPE PrePrL	         	= [PrePr]

SET AllPrePr            = PrePr PrePrL PrePrExpr

-------------------------------------------------------------------------------------------
-- Expression
-------------------------------------------------------------------------------------------

DATA Expr
  -- primary
  | This
  | Name				nm				: Name
  | Lit					lit				: Lit
  | Lam

  -- infix
  | OpInfix				op				: LexString
  						exprl			: Expr
  						exprr			: Expr

  -- postfix
  | Index				expr			: Expr		-- postfix-expression [ expression ]
  						inx				: Expr
  | Call				expr			: Expr		-- postfix-expression ( expression-list opt)
  						args			: ExprL
  | IfThenElse 			exprCond		: Expr		-- logical-or-expression ? expression : assignment-expression
  						exprThen		: Expr
  						exprElse		: Expr

  -- Initialization
  | Init				initExprs		: ExprL
  						hasDots			: Bool

  -- Comma sep list of expr
  | Exprs				exprs			: ExprL

TYPE ExprL	         	= [Expr]

SET AllExpr             = Expr ExprL

-------------------------------------------------------------------------------------------
-- Literal, value is represented as string
-------------------------------------------------------------------------------------------

DATA Lit
  | Int					str				: LexString
  | Float				str				: LexString
  | Char				str				: LexString
  | String				str				: LexString

SET AllLit              = Lit

-------------------------------------------------------------------------------------------
-- Name (for a var)
-------------------------------------------------------------------------------------------

DATA Name
  | Id					id				: LexString		-- simple id
  | Op					id				: LexString		-- operator ...
  | Tilde				nm				: Name			-- ~ class name
  | Qual				nm				: Name			-- :: ...
  | QualNest			nmQuals			: NameL			-- ::opt ... :: ...
  						nm				: Name
  | DeclType			expr			: Expr			-- decltype ( expr )
  | Templ				nm				: Name			-- templ-nm < args ... >
  						nmArgs			: NameL
  						hasDots			: Bool

TYPE NameL				= [Name]

SET AllName             = Name NameL

-------------------------------------------------------------------------------------------
-- All NT
-------------------------------------------------------------------------------------------

SET AllBaseNT           = AllDecl AllPrePr AllExpr AllLit AllName
